{"version":3,"file":"static/js/385.1bb72001.chunk.js","mappings":"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","sources":["components/Dashboard/Dashboard.styled.jsx","components/Events/Events.styled.jsx","components/EventCard/EventCard.styled.jsx","components/EventCard/EventCard.jsx","components/EventList/EventList.styled.jsx","components/EventList/EventList.jsx","components/Events/Events.jsx","hooks/useIntersectionObserver.js","components/SortControls/SortControls.styled.jsx","components/SortControls/SortControls.jsx","components/Dashboard/Dashboard.jsx","pages/EventsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 32px 0 57px;\n`;\n\nexport const Section = styled.div`\n  max-width: 1352px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 20px;\n  padding-right: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  height: 100%;\n\n  @media (max-width: 374px) {\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div``;\n\nexport const LoaderBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 25px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  justify-content: space-between;\n  height: 100%;\n\n  border: 1px solid ${({ theme }) => theme.colors.buttonWhite};\n  border-radius: 27px;\n  padding: 40px;\n  background-color: ${({ theme }) => theme.colors.backgroundGreen};\n\n  width: calc((100% - (2 * 32px)) / 3);\n  height: auto;\n\n  overflow: hidden;\n\n  @media (max-width: 1023px) {\n    padding: 20px;\n    width: calc((100% - (25px)) / 2);\n  }\n\n  @media (max-width: 767px) {\n    width: calc((100% - (20px)) / 2);\n  }\n\n  @media (max-width: 499px) {\n    width: 100%;\n  }\n`;\n\nexport const Title = styled.p`\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 1.4;\n  color: ${({ theme }) => theme.colors.textBlack};\n`;\n\nexport const Date = styled.p`\n  color: #93939a;\n  color: ${({ theme }) => theme.colors.textGray};\n`;\n\nexport const Description = styled.p`\n  color: ${({ theme }) => theme.colors.textBlack};\n`;\n\nexport const Organizer = styled.p`\n  font-weight: 600;\n  color: ${({ theme }) => theme.colors.greenAccent};\n`;\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import React from 'react';\nimport moment from 'moment';\n\nimport {\n  ButtonBox,\n  Container,\n  Date,\n  Description,\n  Organizer,\n  Title,\n} from './EventCard.styled';\nimport { Button } from 'components/Button/Button';\nimport { Link } from 'react-router-dom';\n\nexport const EventCard = ({ event }) => {\n  return (\n    <Container key={event._id}>\n      <Title>{event.title}</Title>\n      <Date>{moment(event.event_date).format('MMMM D, YYYY')}</Date>\n      <Description>{event.description}</Description>\n      <Organizer>{event.organizer}</Organizer>\n\n      <ButtonBox>\n        <Link to={`/event/${event._id}/add-participant`}>\n          <Button>Register</Button>\n        </Link>\n\n        <Link to={`/event/${event._id}/participants`}>\n          <Button>View</Button>\n        </Link>\n      </ButtonBox>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n\n  gap: 32px;\n\n  @media (max-width: 1023px) {\n    gap: 25px;\n  }\n\n  @media (max-width: 767px) {\n    gap: 20px;\n  }\n`;\n","import React from 'react';\n\nimport { EventCard } from 'components/EventCard/EventCard';\nimport { Container } from './EventList.styled';\n\nexport const EventList = ({ events }) => {\n  return (\n    <Container>\n      {events.map(e => (\n        <EventCard key={e._id} event={e} />\n      ))}\n    </Container>\n  );\n};\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { eventsActions, eventsSelectors } from 'store/events/eventsSlice';\nimport { Container, LoaderBox } from './Events.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { Message } from 'components/Message/Message';\nimport { EventList } from 'components/EventList/EventList';\nimport { useIntersectionObserver } from 'hooks/useIntersectionObserver';\n\nconst limit = 9;\n\nexport const Events = () => {\n  const dispatch = useDispatch();\n  const initialRender = useRef(true);\n\n  const sorting = useSelector(eventsSelectors.selectSorting);\n\n  const initialQuery = {\n    page: 1,\n    limit,\n    sortField: sorting.sortField,\n    sortOrder: sorting.sortDirection,\n  };\n\n  const [query, setQuery] = useState(initialQuery);\n\n  const events = useSelector(eventsSelectors.selectEvents);\n\n  const isLoading = useSelector(eventsSelectors.selectIsLoading);\n\n  const hasMorePages = useSelector(eventsSelectors.selectHasMorePages);\n\n  const prevPageRef = useRef(1);\n  const prevSortFieldRef = useRef(sorting.sortField);\n  const prevSortOrderRef = useRef(sorting.sortDirection);\n\n  useEffect(() => {\n    const hasPageChanged =\n      query.page !== 1 && prevPageRef.current !== query.page;\n\n    const payload = {\n      page: query.page,\n      limit: query.limit,\n      sortField: query.sortField,\n      sortOrder: query.sortOrder,\n    };\n\n    if (initialRender.current && hasPageChanged) {\n      dispatch(eventsActions.getMoreEventsAction(payload));\n    } else {\n      dispatch(eventsActions.getEventsAction(payload));\n    }\n\n    initialRender.current = false;\n\n    prevPageRef.current = query.page;\n    prevSortFieldRef.current = query.sortField;\n    prevSortOrderRef.current = query.sortOrder;\n  }, [query.page, query.limit, query.sortField, query.sortOrder, dispatch]);\n\n  useEffect(() => {\n    initialRender.current = true;\n    setQuery(q => ({\n      ...q,\n      page: 1,\n      sortField: sorting.sortField,\n      sortOrder: sorting.sortDirection,\n    }));\n  }, [sorting.sortField, sorting.sortDirection]);\n\n  const onIntersect = useCallback(() => {\n    if (hasMorePages) {\n      initialRender.current = true;\n      setQuery(q => ({ ...q, page: q.page + 1 }));\n    }\n  }, [hasMorePages]);\n\n  const [targetRef] = useIntersectionObserver({ onIntersect });\n\n  return (\n    <Container>\n      <>\n        {events.length ? (\n          <EventList events={events} />\n        ) : (\n          <Message>There are no planned events yet. Try again later.</Message>\n        )}\n      </>\n\n      <div ref={targetRef} style={{ height: '25px' }}>\n        {isLoading && (\n          <LoaderBox>\n            <Loader />\n          </LoaderBox>\n        )}\n      </div>\n    </Container>\n  );\n};\n","import { useEffect, useRef, useState } from 'react';\n\nexport function useIntersectionObserver(options) {\n  const {\n    threshold = 0.1,\n    root = null,\n    rootMargin = '0px',\n    onIntersect,\n  } = options;\n\n  const targetRef = useRef(null);\n\n  const [entry, setEntry] = useState();\n\n  useEffect(() => {\n    const currentRef = targetRef.current;\n\n    const observer = new IntersectionObserver(\n      entries => {\n        const [entry] = entries;\n\n        if (entry.isIntersecting) {\n          onIntersect();\n        }\n        setEntry(entry);\n      },\n      {\n        threshold,\n        root,\n        rootMargin,\n      }\n    );\n\n    if (currentRef) {\n      observer.observe(currentRef);\n    }\n\n    return function () {\n      if (currentRef) {\n        observer.disconnect();\n      }\n    };\n  }, [threshold, root, rootMargin, onIntersect]);\n\n  return [targetRef, entry];\n}\n","import styled from '@emotion/styled';\n\nexport const SortingBox = styled.div`\n  display: flex;\n  gap: 20px;\n\n  @media (max-width: 767px) {\n    flex-wrap: wrap;\n  }\n`;\n","import { Button } from 'components/Button/Button';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GoTriangleDown, GoTriangleUp } from 'react-icons/go';\n\nimport { eventsActions, eventsSelectors } from 'store/events/eventsSlice';\nimport { SortingBox } from './SortControls.styled';\n\nexport const SortControls = () => {\n  const dispatch = useDispatch();\n  const sorting = useSelector(eventsSelectors.selectSorting);\n\n  const [sortConfig, setSortConfig] = useState(sorting);\n\n  const handleSortClick = sortField => {\n    const isCurrentField = sortConfig.sortField === sortField;\n\n    const nextSortDirection =\n      sortField === ''\n        ? ''\n        : isCurrentField\n        ? sortConfig.sortDirection === 'asc'\n          ? 'desc'\n          : 'asc'\n        : 'asc';\n\n    const newSortConfig = {\n      sortField,\n      sortDirection: nextSortDirection,\n    };\n\n    dispatch(eventsActions.setFiltersAction(newSortConfig));\n    setSortConfig(newSortConfig);\n  };\n\n  const getSortLabel = (label, sortField) => {\n    if (sortConfig.sortField === sortField) {\n      return (\n        <>\n          {label}\n          <span></span>\n          {sortConfig.sortDirection === 'asc' ? (\n            <GoTriangleUp size={12} />\n          ) : (\n            <GoTriangleDown size={12} />\n          )}\n        </>\n      );\n    }\n    return label;\n  };\n\n  return (\n    <SortingBox>\n      <Button onClick={() => handleSortClick('title')} className=\"select\">\n        {getSortLabel('Title', 'title')}\n      </Button>\n      <Button onClick={() => handleSortClick('event_date')} className=\"select\">\n        {getSortLabel('Event date', 'event_date')}\n      </Button>\n      <Button onClick={() => handleSortClick('organizer')} className=\"select\">\n        {getSortLabel('Organizer', 'organizer')}\n      </Button>\n      <Button onClick={() => handleSortClick('')} className=\"select\">\n        Default\n      </Button>\n    </SortingBox>\n  );\n};\n","import React from 'react';\nimport { Container, Section } from './Dashboard.styled';\nimport { Events } from 'components/Events/Events';\nimport { SortControls } from 'components/SortControls/SortControls';\n\nexport const Dashboard = () => {\n  return (\n    <Container>\n      <Section>\n        <div>\n          <SortControls />\n        </div>\n        <div>\n          <Events />\n        </div>\n      </Section>\n    </Container>\n  );\n};\n","import { Dashboard } from 'components/Dashboard/Dashboard';\nimport React from 'react';\n\nconst EventsPage = () => {\n  return <Dashboard />;\n};\n\nexport default EventsPage;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Section","_templateObject2","LoaderBox","_ref","theme","colors","buttonWhite","_ref2","backgroundGreen","Title","_ref3","textBlack","Date","_templateObject3","_ref4","textGray","Description","_templateObject4","_ref5","Organizer","_templateObject5","_ref6","greenAccent","ButtonBox","_templateObject6","EventCard","event","_jsxs","children","_jsx","title","moment","event_date","format","description","organizer","Link","to","concat","_id","Button","EventList","events","map","e","Events","dispatch","useDispatch","initialRender","useRef","sorting","useSelector","eventsSelectors","initialQuery","page","limit","sortField","sortOrder","sortDirection","_useState","useState","_useState2","_slicedToArray","query","setQuery","isLoading","hasMorePages","prevPageRef","prevSortFieldRef","prevSortOrderRef","useEffect","hasPageChanged","current","payload","eventsActions","q","_objectSpread","_useIntersectionObser","options","_options$threshold","threshold","_options$root","root","_options$rootMargin","rootMargin","onIntersect","targetRef","entry","setEntry","currentRef","observer","IntersectionObserver","entries","isIntersecting","observe","disconnect","useIntersectionObserver","useCallback","_Fragment","length","Message","ref","style","height","Loader","SortingBox","SortControls","sortConfig","setSortConfig","handleSortClick","isCurrentField","newSortConfig","getSortLabel","label","GoTriangleUp","size","GoTriangleDown","onClick","className","Dashboard"],"sourceRoot":""}